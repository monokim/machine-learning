{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Transfer learning","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPaFFwKkBKlE/rhB4E/EwbX"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"-CDjIDi9ef5x","executionInfo":{"status":"ok","timestamp":1606728445947,"user_tz":-60,"elapsed":2769,"user":{"displayName":"Hyunho Kim","photoUrl":"","userId":"04207700874606948738"}}},"source":["import tensorflow as tf"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"V1bf6osLeke0","executionInfo":{"status":"ok","timestamp":1606728567262,"user_tz":-60,"elapsed":435,"user":{"displayName":"Hyunho Kim","photoUrl":"","userId":"04207700874606948738"}}},"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import sys, os\n","\n","from glob import glob\n","\n","from tensorflow.keras.layers import Input, Dense, Flatten\n","from tensorflow.keras.applications.vgg16 import VGG16 as PretrainedModel, preprocess_input\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.optimizers import SGD, Adam\n","from tensorflow.keras.preprocessing import image\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"esa2XbNYfEf0","executionInfo":{"status":"ok","timestamp":1606729015396,"user_tz":-60,"elapsed":104738,"user":{"displayName":"Hyunho Kim","photoUrl":"","userId":"04207700874606948738"}},"outputId":"1455b9ab-ed96-4b67-a4e8-3d39b75d95d6"},"source":["!wget --passive-ftp --prefer-family=ipv4 --ftp-user FoodImage@grebvm2.epfl.ch \\\n","--ftp-password Cahclmoo -nc ftp://tremplin.epfl.ch/Food-5K.zip"],"execution_count":6,"outputs":[{"output_type":"stream","text":["--2020-11-30 09:35:10--  ftp://tremplin.epfl.ch/Food-5K.zip\n","           => ‘Food-5K.zip’\n","Resolving tremplin.epfl.ch (tremplin.epfl.ch)... 128.178.218.41, 2001:620:618:1da:1:80b2:da29:1\n","Connecting to tremplin.epfl.ch (tremplin.epfl.ch)|128.178.218.41|:21... connected.\n","Logging in as FoodImage@grebvm2.epfl.ch ... ^C\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"85QkgliGfWCY","executionInfo":{"status":"ok","timestamp":1606729221771,"user_tz":-60,"elapsed":1944,"user":{"displayName":"Hyunho Kim","photoUrl":"","userId":"04207700874606948738"}},"outputId":"f85147a0-ad99-43b4-9a74-3fe415f3d005"},"source":["IMAGE_SIZE = [200, 200]\n","\n","ptm = PretrainedModel(\n","    input_shape=IMAGE_SIZE + [3],\n","    weights='imagenet',\n","    include_top=False\n",")\n","\n","# Freeze weights\n","ptm.trainable = False"],"execution_count":7,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/vgg16/vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5\n","58892288/58889256 [==============================] - 1s 0us/step\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"BsqRsP-yhj66","executionInfo":{"status":"ok","timestamp":1606729260297,"user_tz":-60,"elapsed":455,"user":{"displayName":"Hyunho Kim","photoUrl":"","userId":"04207700874606948738"}}},"source":["K = 100\n","x = Flatten()(ptm.output)\n","x = Dense(K, activation='softmax')(x)"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vkjIvq5Whtsb","executionInfo":{"status":"ok","timestamp":1606729306406,"user_tz":-60,"elapsed":470,"user":{"displayName":"Hyunho Kim","photoUrl":"","userId":"04207700874606948738"}},"outputId":"0c3e4018-ceda-453d-ed2c-fd4f67c1f23c"},"source":["model = Model(inputs=ptm.input, outputs=x)\n","model.summary()"],"execution_count":9,"outputs":[{"output_type":"stream","text":["Model: \"functional_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_1 (InputLayer)         [(None, 200, 200, 3)]     0         \n","_________________________________________________________________\n","block1_conv1 (Conv2D)        (None, 200, 200, 64)      1792      \n","_________________________________________________________________\n","block1_conv2 (Conv2D)        (None, 200, 200, 64)      36928     \n","_________________________________________________________________\n","block1_pool (MaxPooling2D)   (None, 100, 100, 64)      0         \n","_________________________________________________________________\n","block2_conv1 (Conv2D)        (None, 100, 100, 128)     73856     \n","_________________________________________________________________\n","block2_conv2 (Conv2D)        (None, 100, 100, 128)     147584    \n","_________________________________________________________________\n","block2_pool (MaxPooling2D)   (None, 50, 50, 128)       0         \n","_________________________________________________________________\n","block3_conv1 (Conv2D)        (None, 50, 50, 256)       295168    \n","_________________________________________________________________\n","block3_conv2 (Conv2D)        (None, 50, 50, 256)       590080    \n","_________________________________________________________________\n","block3_conv3 (Conv2D)        (None, 50, 50, 256)       590080    \n","_________________________________________________________________\n","block3_pool (MaxPooling2D)   (None, 25, 25, 256)       0         \n","_________________________________________________________________\n","block4_conv1 (Conv2D)        (None, 25, 25, 512)       1180160   \n","_________________________________________________________________\n","block4_conv2 (Conv2D)        (None, 25, 25, 512)       2359808   \n","_________________________________________________________________\n","block4_conv3 (Conv2D)        (None, 25, 25, 512)       2359808   \n","_________________________________________________________________\n","block4_pool (MaxPooling2D)   (None, 12, 12, 512)       0         \n","_________________________________________________________________\n","block5_conv1 (Conv2D)        (None, 12, 12, 512)       2359808   \n","_________________________________________________________________\n","block5_conv2 (Conv2D)        (None, 12, 12, 512)       2359808   \n","_________________________________________________________________\n","block5_conv3 (Conv2D)        (None, 12, 12, 512)       2359808   \n","_________________________________________________________________\n","block5_pool (MaxPooling2D)   (None, 6, 6, 512)         0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 18432)             0         \n","_________________________________________________________________\n","dense (Dense)                (None, 100)               1843300   \n","=================================================================\n","Total params: 16,557,988\n","Trainable params: 1,843,300\n","Non-trainable params: 14,714,688\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"9V1V5Ek5h48y"},"source":[""],"execution_count":null,"outputs":[]}]}